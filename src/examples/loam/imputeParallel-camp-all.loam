//---------------------------GLOBAL SETTINGS----------------------------------------------------------------------------
val kgp_dir = path("/humgen/diabetes/users/ryank/data/1kg_phase3/1000GP_Phase3")

val software_dir = path("/humgen/diabetes/users/ryank/software")
val shapeit = software_dir / "shapeit/bin/shapeit"
val impute2 = software_dir / "impute_v2.3.2_x86_64_static/impute2"

val shapeit_data_dir =  path("/humgen/diabetes/users/ryank/data/camp/data_clean/split")
val output_dir = path("/humgen/diabetes/users/kyuksel/imputation/run_dir")

val num_bases_per_shard = 1000000

// Map: Chrom Number -> (Number of Shards, Offset for Start Position)
var chr_props: Map[Int, (Int, Int)] = Map.empty
chr_props += (1 -> (250, 10176))
chr_props += (2 -> (244, 10178))
chr_props += (3 -> (198, 60068))
chr_props += (4 -> (192, 10004))
chr_props += (5 -> (182, 10042))
chr_props += (6 -> (172, 63853))
chr_props += (7 -> (160, 14807))
chr_props += (8 -> (147, 11739))
chr_props += (9 -> (142, 10162))
chr_props += (10 -> (137, 60493))
chr_props += (11 -> (136, 61394))
chr_props += (12 -> (135, 60180))
chr_props += (13 -> (97, 19020046))
chr_props += (14 -> (89, 19000016))
chr_props += (15 -> (83, 20000040))
chr_props += (16 -> (91, 60085))
chr_props += (17 -> (82, 51))
chr_props += (18 -> (79, 10082))
chr_props += (19 -> (60, 60841))
chr_props += (20 -> (64, 60342))
chr_props += (21 -> (39, 9411238))
chr_props += (22 -> (36, 16050074))

//---------------------------LOOP THROUGH CHROMOSOMES-------------------------------------------------------------------
for (chr_num <- 1 to 22) {
  val chr = s"chr${chr_num}"

  val vcf_data = store.at(shapeit_data_dir / s"camp.biallelic.${chr}.clean.vcf.gz").asInput
  val genetic_map = store.at(kgp_dir / s"genetic_map_${chr}_combined_b37.txt").asInput
  val phased_haps = store.at(output_dir / s"phased_haps_${chr}.gz")
  val phased_samples = store.at(output_dir / s"phased_samples_${chr}.gz")
  val log = store.at(output_dir / s"shapeit_${chr}.log")

  cmd"$shapeit -V $vcf_data -M $genetic_map -O $phased_haps $phased_samples -L $log --thread 16"

  val map_file = store.at(kgp_dir / s"genetic_map_${chr}_combined_b37.txt").asInput
  val legend = store.at(kgp_dir / s"1000GP_Phase3_${chr}.legend.gz").asInput
  val known_haps = store.at(kgp_dir / s"1000GP_Phase3_${chr}.hap.gz").asInput

  val (num_shards, offset) = chr_props.get(chr_num).get
//---------------------------LOOP THROUGH WINDOWS WITHIN CHROMOSOME-----------------------------------------------------
  for(shard <- 0 until num_shards) {
    val start = offset + shard*num_bases_per_shard + 1
    val end = start + num_bases_per_shard - 1

    val imputed = store.at(output_dir / s"imputed_data_${chr}_bp${start}_${end}.gen")

    cmd"""$impute2 -use_prephased_g -m $map_file -h $known_haps -l $legend
    -known_haps_g $phased_haps -int $start $end -Ne 20000 -o $imputed -verbose -o_gz
    """
  }
}