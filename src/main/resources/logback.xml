<configuration debug="false">
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoders are assigned the type
            ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
        <encoder>
            <pattern>%date %level [%thread] [%logger{10}] %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <file>out/loamStream.log</file>
        <append>false</append>
        <encoder>
            <pattern>%date %level [%thread] [%logger{10}] %msg%n</pattern>
        </encoder>
    </appender>
    
    <appender name="JOB_STATE_LOG" class="ch.qos.logback.core.FileAppender">
        <file>out/job-states.log</file>
        <append>false</append>
        <encoder>
            <pattern>%date %msg%n</pattern>
        </encoder>
    </appender>
    <!-- 
         Logging levels in the order of increasing significance are: TRACE < DEBUG < INFO <  WARN < ERROR

         Default log level is INFO.  This can be overridden by setting the 'loamstream-log-level' JVM system property:
           Switch logging off entirely:   scala -Dloamstream-log-level=OFF some.main.Class ...
           Switch logging to DEBUG level: scala -Dloamstream-log-level=DEBUG some.main.Class ...
           Switch logging to WARN level:  scala -Dloamstream-log-level=WARN some.main.Class ...
           etc
    -->
    <root level="${loamstream-log-level:-INFO}">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE"/>
    </root>

    <logger name="LoamStream" level="${loamstream-log-level:-INFO}"/>
    
    <logger name="loamstream.model.jobs.log" level="INFO">
      <appender-ref ref="JOB_STATE_LOG" />
    </logger>

    <!-- Without this, Slick spews tons and tons of stuff to the console -->
    <logger name="slick" level="INFO" />
</configuration>
